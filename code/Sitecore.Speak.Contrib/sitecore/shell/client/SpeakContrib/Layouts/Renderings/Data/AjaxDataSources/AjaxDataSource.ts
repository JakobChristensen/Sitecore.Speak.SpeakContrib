import Speak = require("sitecore/shell/client/Speak/Assets/lib/core/1.2/SitecoreSpeak");

class AjaxDataSource extends Speak.ControlBase {
  // #region Public Properties
  // This region was generated by a tool. Changes to this region may cause incorrect behavior and will be lost if the code is regenerated.
  public CompleteTrigger: string;
  public Data: string;
  public ErrorText: string;
  public HasError: boolean;
  public IsBusy: boolean;
  public Json: string;
  public Timeout: number;
  public Type: string;
  public Url: string;
  // #endregion

  private isReady: boolean;
  private pendingRequests: number;

  initialized() {
    this.on("change:Url", () => this.send());
  }

  send() {
    this.pendingRequests++;
    this.IsBusy = true;

    var t = this.Type;
    if (!t) {
      t = "GET";
    }

    var options = {
      data: this.Data,
      dataType: "json",
      timeout: this.Timeout,
      type: t,
      url: this.Url,

      complete: $.proxy(this.complete, this),
      error: $.proxy(this.error, this),
      success: $.proxy(this.success, this)
    };

    $.ajax(options);       
  }

  complete(request, status) {
    var trigger = this.CompleteTrigger;
    if (trigger) {
      this.app.trigger(trigger, request);
    }
  }

  error(request, status) {
    this.Json = null;
    this.HasError = true;
    this.ErrorText = status;

    this.pendingRequests--;
    if (this.pendingRequests <= 0) {
      this.IsBusy = false;
      this.pendingRequests = 0;
    }
  }

  success(json) {
    this.Json = json;
    this.HasError = false;
    this.ErrorText = null;

    this.pendingRequests--;
    if (this.pendingRequests <= 0) {
      this.IsBusy = false;
      this.pendingRequests = 0;
    }
  }
}

Sitecore.component(AjaxDataSource, "AjaxDataSource");
