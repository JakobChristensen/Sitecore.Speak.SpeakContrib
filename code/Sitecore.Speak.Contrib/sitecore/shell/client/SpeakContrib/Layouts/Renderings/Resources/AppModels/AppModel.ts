/// <amd-dependency path="/sitecore/shell/client/SpeakContrib/Assets/lib/core/1.2/Sitecore.Speak.Apps.js" />
import Speak = require("sitecore/shell/client/Speak/Assets/lib/core/1.2/SitecoreSpeak");

class AppModel extends Speak.ControlBase {
  // #region Public Properties
  // This region was generated by a tool. Changes to this region may cause incorrect behavior and will be lost if the code is regenerated.
  public AppModelKey: string;
  // #endregion

  initialized() {
    this.on("all", this.update, this);
    this.app.on("dialog:ok", this.handleDialogOk, this);
  }

  update(data) {
    if (data.substring(0, 7) != "change:") {
      return;
    }                     

    var name = data.substr(7);
    var value = this[name];

    var postData = {
      AppModelKey: this.AppModelKey,
      Name: name,
      Value: value
    };

    var options = {
      data: postData,
      dataType: "text",
      type: "POST",
      url: "/sitecore/shell/client/SpeakContrib/Layouts/Renderings/Resources/AppModels/AppModel.ashx",

      error: $.proxy(this.error, this)
    };

    $.ajax(options);
  }

  error(request, status) {
    // console.log(status);
  }

  handleDialogOk() {
    if (window.opener == null) {
      return;
    }

    var data = {};

    // get property names from this.properties but read value from this
    var properties = (<any>this).properties;
    for (var n in properties) {
      var value = this[n];
      if (_.isString(value) || _.isNumber(value) || _.isBoolean(value)) {
        data[n] = value;
      }
    }

    window.opener.postMessage(data, "*");
  }
}

Sitecore.component(AppModel, "AppModel");
